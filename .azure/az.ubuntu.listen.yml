# schedules:
#   - cron: "*/50 * * * *"
#     batch: true # Whether to run the pipeline if the previously scheduled run is in-progress; the default is false.
#     always: true # Whether to always run the pipeline or only if there have been source code changes since the last successful scheduled run; the default is false.
#     displayName: cron job to run every 5 minutes
#     branches:
#       include:
#         - main
trigger:
  branches:
    include:
      - refs/heads/main_not_run_on_push
parameters:
  - name: runon
    displayName: runon
    type: string
    default: ubuntu-latest
    values:
      - ubuntu-latest
      - windows-latest
  - name: mainjs
    displayName: mainjs
    type: string
    default: main.js

jobs:
  - job: osvrrepoaes
    displayName: osvrrepoaes
    pool:
      vmImage: ${{ parameters.runon }}
    steps:
      - task: UseNode@1
        displayName: Install NodeJS 18.x
        inputs:
          version: "18.x"

      - task: Bash@3
        displayName: Clone and decrypt dist
        env:
          SYTEM_ACCESS_TOKEN: $(System.AccessToken)
        inputs:
          targetType: inline
          script: |
            file=./dist/oAESFile.js

            git clone https://o-adv@dev.azure.com/o-adv/o-svr-repo-aes/_git/o-svr-repo-aes ./dist

            if [ ! -f "$file" ]; then
              git clone https://github.com/ongtrieuhau-dh/o-svr-repo-aes.git ./dist
            fi
            if [ ! -f "$file" ]; then
              git clone https://github.com/dh-hos/o-svr-repo-aes.git ./dist
            fi

            if [ -f "./dist/oAESFile.js" ]; then 
              node ./dist/oAESFile.js --de $(oAESFile) ./dist; 
              cd ./dist;
              git log -1;
            fi

      - task: Bash@3
        displayName: Run PreScript
        condition: always()
        env:
          SYTEM_ACCESS_TOKEN: $(System.AccessToken)
        inputs:
          targetType: inline
          workingDirectory: ./dist
          script: |
            if [ -f "./preScript.aessecret.sh" ]; then 
              chmod u=rwx ./preScript.aessecret.sh;
              ./preScript.aessecret.sh;
            fi
            if [ -f "./package.json" ]; then npm install; fi
            npm install pm2@latest -g

      - task: Bash@3
        displayName: Run ./dist/${{ parameters.mainjs }}
        condition: always()
        env:
          SYTEM_ACCESS_TOKEN: $(System.AccessToken)
        inputs:
          targetType: "inline"
          workingDirectory: ./dist
          script: |
            node ./${{ parameters.mainjs }}

      - task: Bash@3
        displayName: Run SubScript
        condition: always()
        env:
          SYTEM_ACCESS_TOKEN: $(System.AccessToken)
        inputs:
          targetType: inline
          workingDirectory: ./dist
          script: |
            if [ -f "./subScript.aessecret.sh" ]; then 
              chmod u=rwx ./subScript.aessecret.sh;
              ./subScript.aessecret.sh; 
            fi
